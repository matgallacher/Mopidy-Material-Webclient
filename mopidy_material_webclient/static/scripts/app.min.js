var app=angular.module("MopidyApp",["ngRoute","ngMaterial","mopControllers","mopServices"]);app.config(function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("deep-purple").accentPalette("pink")}),app.config(["$routeProvider",function($routeProvider){$routeProvider.when("/queue",{templateUrl:"partials/queue.html",controller:"QueueCtrl"}).when("/library",{templateUrl:"partials/library.html",controller:"LibraryCtrl"}).when("/library/:type/:uri",{templateUrl:"partials/library.html",controller:"LibraryCtrl"}).when("/playlists",{templateUrl:"partials/playlists.html",controller:"PlaylistsCtrl"}).when("/playlists/:uri",{templateUrl:"partials/playlists.html",controller:"PlaylistsCtrl"}).when("/search/:uri/:query",{templateUrl:"partials/search.html",controller:"SearchCtrl"}).when("/settings",{templateUrl:"partials/settings.html",controller:"SettingsCtrl"}).when("/about",{templateUrl:"partials/about.html",controller:"AboutCtrl"}).otherwise({redirectTo:"/queue"})}]);var controllers=angular.module("mopControllers",[]);controllers.controller("AppCtrl",["$scope","$mdSidenav","$mdDialog","$mdToast","$location","$timeout","$http","mopidy","lastfm","settings",function($scope,$mdSidenav,$mdDialog,$mdToast,$location,$timeout,$http,mopidy,lastfm,settings){$scope.showNowPlaying=!1,$scope.volume={value:0,bypass:!0,timer:null},settings.get().then(function(settings){$scope.settings=settings["material-webclient"]}),mopidy.then(function(m){m.playback.getCurrentTrack().done(function(track){$scope.$apply(function(){$scope.nowPlaying=track,$scope.getInfo($scope.nowPlaying)})}),m.playback.getState().done(function(state){$scope.$apply(function(){$scope.state=state})}),m.tracklist.getLength().then(function(length){length>0&&($scope.showNowPlaying=!0)}),m.playback.getMute().then(function(mute){mute?$scope.volume.value=0:m.playback.getVolume().then(function(volume){$scope.volume.value=volume,setTimeout(function(){$scope.volume.bypass=!1})})}),m.on(console.log.bind(console)),m.on("event:tracklistChanged",function(e){m.tracklist.getLength().then(function(length){$scope.showNowPlaying=length>0})}),m.on("event:playbackStateChanged",function(e){$scope.$apply(function(){$scope.state=e.new_state})}),m.on("event:trackPlaybackStarted",function(e){$scope.$apply(function(){$scope.nowPlaying=e.tl_track.track,$scope.getInfo($scope.nowPlaying)})}),m.on("event:volumeChanged",function(e){console.log(e),$scope.$apply(function(){$scope.volume.bypass=!0,$scope.volume.value=e.volume,setTimeout(function(){$scope.volume.bypass=!1},0)})}),m.on("event:muteChanged",function(e){console.log(e),$scope.$apply(function(){$scope.volume.bypass=!0,e.mute?$scope.volume.value=0:m.playback.getVolume().then(function(data){console.log(data),$scope.volume.value=data.volume,setTimeout(function(){$scope.volume.bypass=!1},0)})})}),$scope.$watch("volume.value",function(oldValue,newValue){newValue&&!$scope.volume.bypass&&($timeout.cancel($scope.volume.timer),$scope.volume.timer=$timeout(function(){m.playback.setVolume(newValue),m.playback.setMute(!1)},100))}),m.errback=function(e){console.log(e)},$scope.play=function(){m.playback.play()},$scope.pause=function(){m.playback.pause()}}),$scope.getInfo=function(track){track&&0!==track.artists.length&&lastfm.getTrack(track).success(function(trackInfo){var t=trackInfo.track;if(t&&t.album&&t.album.image&&t.album.image.length>0){$scope.nowPlaying.album=t.album,$scope.nowPlaying.album.images=[];for(var i=0;i<t.album.image.length;i++)$scope.nowPlaying.album.images.push(t.album.image[i]["#text"])}})},$scope.goTo=function(path){$location.path(path),$mdSidenav("left").toggle()},$scope.toggleSidenav=function(menuId){$mdSidenav(menuId).toggle()},$scope.system=function($event){function DialogController($scope,$mdDialog){$scope.action=function(value){$mdDialog.hide(value)},$scope.closeDialog=function(){$mdDialog.cancel()}}$mdDialog.show({targetEvent:$event,template:'<md-dialog aria-label="List dialog">  <md-dialog-content>    <md-list>      <md-list-item ng-click="action(\'restart\')">        <md-icon class="md-accent">refresh</md-icon><p>Restart</p>      </md-list-item>      <md-list-item ng-click="action(\'about\')">        <md-icon class="md-accent">info</md-icon><p>About</p>      </md-list-item>      <md-list-item ng-click="closeDialog()">        <md-icon>cancel</md-icon><p>Cancel</p>      </md-list-item>    </md-list>  </md-dialog-content></md-dialog>',controller:DialogController}).then(function(response){"about"==response?$location.path("about"):"restart"==response&&$http.post("/material-webclient/restart").success(function(response){$mdToast.show($mdToast.simple().content(response.message).hideDelay(3e3))}),console.log(response)})}}]),controllers.controller("LibraryCtrl",["$scope","$routeParams","$location","$window","$mdBottomSheet","$sce","mopidy","lastfm",function($scope,$routeParams,$location,$window,$mdBottomSheet,$sce,mopidy,lastfm){var type=null,uri=null;$routeParams.type&&(type=decodeURIComponent($routeParams.type)),$routeParams.uri&&(uri=decodeURIComponent($routeParams.uri),$scope.uri=uri),$scope.loading=!0,mopidy.then(function(m){$scope.mopidy=m,m.library.browse(uri).done(function(content){var uris=[];$scope.$apply(function(){$scope.content=content,$scope.loading=!1});for(var i=0;i<content.length;i++)"track"==content[i].type&&uris.push(content[i].uri);type&&m.library.getImages(uris).done(function(images){$scope.$apply(function(){for(var i=0;i<$scope.content.length;i++){var img=images[$scope.content[i].uri];img&&img.length>0&&($scope.content[i].image=img[0].uri)}})})}),type&&"directory"!=type&&0!==uri.indexOf("podcast")&&m.library.lookup(uri).done(function(info){$scope.tracks=info;var album,artist;info.length>0&&(album=info[0].album,artist=info[0].artists&&info[0].artists.length>0?info[0].artists[0]:null);for(var i=1;i<info.length;i++){var al=info[i].album;album&&al&&al.name!=album.name&&(album=null);var ar=info[i].artists&&info[i].artists.length>0?info[i].artists[0]:null;artist&&ar&&ar.name!=artist.name&&(artist=null)}"album"==type&&album&&lastfm.getAlbum(album).success(function(albumInfo){$scope.albumInfo=albumInfo.album}),"artist"==type&&artist&&lastfm.getArtist(artist).success(function(artistInfo){$scope.artistInfo=artistInfo.artist})}),m.playlists.lookup("m3u:Favourites.m3u").done(function(playlist){playlist?$scope.favourites=playlist:m.playlists.create("Favourites","m3u").done(function(newPlaylist){$scope.favourites=newPlaylist})})}),$scope.asTrusted=function(summary){return $sce.trustAsHtml(summary)},$scope.getFontIcon=function(ref){return"track"==ref.type.toLowerCase()?"fa-music":0===ref.uri.indexOf("spotify")?"fa-spotify":0===ref.uri.indexOf("tunein:")?"fa-headphones":0===ref.uri.indexOf("podcast:")?"fa-rss":0===ref.uri.indexOf("soundcloud:")?"fa-soundcloud":"fa-folder-o"},$scope.goTo=function(ref){"track"!=ref.type?$location.path("library/"+ref.type+"/"+encodeURIComponent(ref.uri)):$scope.mopidy.play(ref.uri)},$scope.playAll=function(){$scope.mopidy.tracklist.clear();for(var uris=[],i=0;i<$scope.tracks.length;i++)uris.push($scope.tracks[i].uri);$scope.mopidy.tracklist.add(null,null,null,uris).then(function(){$scope.mopidy.playback.play()})},$scope.back=function(){$window.history.back()},$scope.search=function(uri,query){$location.path("search/"+encodeURIComponent(uri)+"/"+encodeURIComponent(query))},$scope.showTrackActions=function($event,track){var child=$scope.$new();$scope.favourites.tracks&&(child.isFavourite=$scope.favourites.tracks.some(function(itm){return itm.uri==track.uri})),$mdBottomSheet.show({templateUrl:"partials/track-actions.html",controller:"TrackActionsCtrl",targetEvent:$event,scope:child}).then(function(clickedItem){"play-next"==clickedItem?$scope.mopidy.playback.getCurrentTlTrack().done(function(current){console.log(current),$scope.mopidy.tracklist.index(current).done(function(index){$scope.mopidy.tracklist.add(null,index+1,null,[track.uri])})}):"add-to-queue"==clickedItem?$scope.mopidy.tracklist.add(null,null,null,[track.uri]):"add-to-favourites"==clickedItem?$scope.addToFavourites(track.uri):"remove-from-favourites"==clickedItem&&$scope.removeFromFavourites(track.uri)})},$scope.addToFavourites=function(uri){$scope.mopidy.library.lookup(uri).done(function(tracks){$scope.favourites.tracks?$scope.favourites.tracks.push(tracks[0]):$scope.favourites.tracks=tracks,$scope.mopidy.playlists.save($scope.favourites).done(function(playlist){$scope.favourites=playlist})})},$scope.removeFromFavourites=function(uri){for(var i=0;i<$scope.favourites.tracks.length;i++)$scope.favourites.tracks[i].uri==uri&&$scope.favourites.tracks.splice(i,1);$scope.mopidy.playlists.save($scope.favourites).done(function(playlist){$scope.favourites=playlist})}}]),controllers.controller("PlaylistsCtrl",["$scope","$routeParams","$location","mopidy",function($scope,$routeParams,$location,mopidy){var uri=$routeParams.uri;mopidy.then(function(m){$scope.mopidy=m,uri?($scope.isPlaylist=!0,m.playlists.lookup(uri).done(function(playlist){$scope.$apply(function(){$scope.playlist=playlist,$scope.content=playlist.tracks;for(var uris=[],i=0;i<$scope.content.length&&9>i;i++)uris.push($scope.content[i].uri);m.library.getImages(uris).done(function(images){$scope.$apply(function(){$scope.images=[];for(var i in images)images.hasOwnProperty(i)&&images[i].length>0&&!_.includes($scope.images,images[i][0].uri)&&$scope.images.push(images[i][0].uri)})})})})):m.playlists.refresh().done(function(){m.playlists.asList().done(function(content){$scope.$apply(function(){$scope.content=content})})})}),$scope.getFontIcon=function(ref){return 0===ref.uri.indexOf("spotify")?"fa-spotify":0===ref.uri.indexOf("tunein:")?"fa-headphones":0===ref.uri.indexOf("podcast")?"fa-rss":0===ref.uri.indexOf("soundcloud")?"fa-soundcloud":$scope.isPlaylist?"fa-music":"fa-folder-o"},$scope.goTo=function(ref){$scope.isPlaylist?($scope.mopidy.tracklist.clear(),$scope.mopidy.tracklist.add(null,null,null,[ref.uri]).then(function(){$scope.mopidy.playback.play()})):$location.path("playlists/"+ref.uri)},$scope.playAll=function(){$scope.mopidy.tracklist.clear().done(function(){for(var uris=[],i=0;i<$scope.content.length;i++)uris.push($scope.content[i].uri);$scope.mopidy.tracklist.add(null,null,null,uris).done(function(){$scope.mopidy.playback.play()})})}}]),controllers.controller("QueueCtrl",["$scope","$mdDialog","$mdToast","mopidy","lastfm",function($scope,$mdDialog,$mdToast,mopidy,lastfm){mopidy.then(function(m){$scope.mopidy=m,m.tracklist.getTlTracks().then(function(tracks){$scope.$apply(function(){$scope.tracks=tracks}),m.playback.getCurrentTlTrack().done(function(tltrack){$scope.$apply(function(){$scope.playing=tltrack,$scope.loading=!1,tltrack&&$scope.getInfo(tltrack.track)})})}),m.tracklist.getRandom().done(function(enabled){$scope.$apply(function(){$scope.randomOn=enabled})}),m.tracklist.getRepeat().done(function(enabled){$scope.$apply(function(){$scope.repeatOn=enabled})}),m.on("event:tracklistChanged",function(){m.tracklist.getTlTracks().then(function(tracks){$scope.$apply(function(){$scope.tracks=tracks})})}),m.playback.getState().done(function(state){$scope.$apply(function(){$scope.state=state})}),m.on("event:playbackStateChanged",function(e){$scope.$apply(function(){$scope.state=e.new_state})}),m.on("event:trackPlaybackStarted",function(e){$scope.$apply(function(){$scope.playing=e.tl_track,$scope.getInfo($scope.nowPlaying)})})}),$scope.getInfo=function(track){track&&0!==track.artists.length&&lastfm.getTrack(track).success(function(trackInfo){var t=trackInfo.track;if(t&&t.album&&t.album.image&&t.album.image.length>0){$scope.playing.track.album=t.album,$scope.playing.track.album.images=[];for(var i=0;i<t.album.image.length;i++)$scope.playing.track.album.images.push(t.album.image[i]["#text"])}})},$scope.play=function(track){"playing"==$scope.state&&track.tlid==$scope.playing.tlid?$scope.mopidy.playback.pause():$scope.mopidy.playback.play(track)},$scope.previous=function(){$scope.mopidy.playback.previous()},$scope.next=function(){$scope.mopidy.playback.next()},$scope.toggleRandom=function(){$scope.mopidy.tracklist.setRandom(!$scope.randomOn).done(function(){$scope.$apply(function(){$scope.randomOn=!$scope.randomOn})})},$scope.toggleRepeat=function(){$scope.mopidy.tracklist.setRepeat(!$scope.repeatOn).done(function(){$scope.$apply(function(){$scope.repeatOn=!$scope.repeatOn})})},$scope.remove=function(track){$scope.mopidy.tracklist.remove({tlid:[track.tlid]})},$scope.clear=function(){$scope.mopidy.tracklist.clear()},$scope.setConsume=function(){$scope.mopidy.tracklist.setConsume(!0).then()},$scope.save=function($event){function SaveDialogController($scope,$mdDialog){$scope.cancel=function(){$mdDialog.cancel()},$scope.save=function(){$mdDialog.hide($scope.name)}}$mdDialog.show({targetEvent:$event,parent:angular.element(document.body),template:'<md-dialog aria-label="Save playlist" flex="20">  <md-dialog-content>    <h3 class="md-title">New playlist</h3>    <form>      <md-input-container flex>        <label>Name</label>        <input type="text" required ng-model="name"/>      </md-input-container>    </form>  </md-dialog-content>  <div class="md-actions">    <md-button ng-click="cancel()" class="md-primary">      Cancel    </md-button>    <md-button ng-click="save()" class="md-primary">      Create playlist    </md-button>  </div></md-dialog>',controller:SaveDialogController}).then(function(name){name&&$scope.mopidy.playlists.create(name,"m3u").done(function(newPlaylist){newPlaylist.tracks=[];for(var i=0;i<$scope.tracks.length;i++)newPlaylist.tracks.push($scope.tracks[i].track);$scope.mopidy.playlists.save(newPlaylist).done(function(playlist){$mdToast.show($mdToast.simple().content("New playlist "+playlist.name+" created").position("bottom").hideDelay(1500))})})})}}]),controllers.controller("SearchCtrl",["$scope","$routeParams","$mdBottomSheet","$location","mopidy",function($scope,$routeParams,$mdBottomSheet,$location,mopidy){$scope.albums=[],$scope.albumsLoading=!0,$scope.artists=[],$scope.artistsLoading=!0,$scope.tracks=[],$scope.tracksLoading=!0;var uri=decodeURIComponent($routeParams.uri),query=decodeURIComponent($routeParams.query);mopidy.then(function(m){$scope.mopidy=m,m.library.search({any:query},[uri]).then(function(results){$scope.$apply(function(){for(var i=0;i<results.length;i++){var library=results[i];if($scope.albumsLoading=!1,library.albums)for(var j=0;j<library.albums.length;j++)$scope.albums.push(library.albums[j]);if($scope.artistsLoading=!1,library.artists)for(var k=0;k<library.artists.length;k++)$scope.artists.push(library.artists[k]);if($scope.tracksLoading=!1,library.tracks)for(var l=0;l<library.tracks.length;l++)$scope.tracks.push(library.tracks[l])}}),console.log(results)}),m.playlists.lookup("m3u:Favourites.m3u").done(function(playlist){playlist?$scope.favourites=playlist:m.playlists.create("Favourites","m3u").done(function(newPlaylist){$scope.favourites=newPlaylist})})}),$scope["goto"]=function(type,uri){$location.path("library/"+type+"/"+encodeURIComponent(uri))},$scope.play=function(track){$scope.mopidy.play(track.uri)},$scope.showTrackActions=function($event,track){var child=$scope.$new();$scope.favourites.tracks&&(child.isFavourite=$scope.favourites.tracks.some(function(itm){return itm.uri==track.uri})),$mdBottomSheet.show({templateUrl:"partials/track-actions.html",controller:"TrackActionsCtrl",targetEvent:$event,scope:child}).then(function(clickedItem){"play-next"==clickedItem?$scope.mopidy.playback.getCurrentTlTrack().done(function(current){console.log(current),$scope.mopidy.tracklist.index(current).done(function(index){$scope.mopidy.tracklist.add(null,index+1,null,[track.uri])})}):"add-to-queue"==clickedItem?$scope.mopidy.tracklist.add(null,null,null,[track.uri]):"add-to-favourites"==clickedItem?$scope.addToFavourites(track.uri):"remove-from-favourites"==clickedItem&&$scope.removeFromFavourites(track.uri)})},$scope.addToFavourites=function(uri){$scope.mopidy.library.lookup(uri).done(function(tracks){$scope.favourites.tracks?$scope.favourites.tracks.push(tracks[0]):$scope.favourites.tracks=tracks,$scope.mopidy.playlists.save($scope.favourites).done(function(playlist){$scope.favourites=playlist})})},$scope.removeFromFavourites=function(uri){for(var i=0;i<$scope.favourites.tracks.length;i++)$scope.favourites.tracks[i].uri==uri&&$scope.favourites.tracks.splice(i,1);$scope.mopidy.playlists.save($scope.favourites).done(function(playlist){$scope.favourites=playlist})}}]),controllers.controller("SettingsCtrl",["$scope","$http","$mdToast","settings",function($scope,$http,$mdToast,settings){settings.get().then(function(settings){$scope.wifi=$scope.wifi?$scope.wifi:[],$scope.settings=settings,$scope.wifi.indexOf(settings.network.wifi_network)<0&&$scope.wifi.push(settings.network.wifi_network)}),$http.get("/material-webclient/wifi").success(function(networks){$scope.wifi=$scope.wifi?$scope.wifi:[];for(var i=0;i<networks.length;i++)$scope.wifi.indexOf(networks[i].ssid)<0&&$scope.wifi.push(networks[i].ssid)}),$scope.save=function(){var data=JSON.parse(JSON.stringify($scope.settings));settings.save(data).then(function(){$mdToast.show($mdToast.simple().content(response.message).hideDelay(3e3))})}}]),controllers.controller("AboutCtrl",["$scope","$http","$mdToast",function($scope,$http,$mdToast){$scope.loading=!0,$scope.refresh=function(){$http.get("/material-webclient/extensions?"+Date.now()).success(function(response){$scope.loading=!1;var extensions={};angular.forEach(response,function(value,key){key.indexOf("Mopidy")>=0&&(extensions[key]={current:value})}),$scope.extensions=extensions})},$scope.refresh(),$scope.checkForUpdates=function(){$scope.loading=!0,$http.get("/material-webclient/extensions?outdated=true&"+Date.now()).success(function(response){var message="No updates found";for(var itm in response)$scope.extensions[itm]&&($scope.extensions[itm].latest=response[itm].latest,message="Updates found for installed modules");$scope.loading=!1,$mdToast.show($mdToast.simple().content(message).hideDelay(3e3))})},$scope.update=function(name){$http({method:"POST",url:"/material-webclient/extensions",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:"extension="+name}).success(function(response){$mdToast.show($mdToast.simple().content(response.message).hideDelay(3e3))})}}]),controllers.controller("TrackActionsCtrl",function($scope,$mdBottomSheet){$scope.listItemClick=function(clickedItem){$mdBottomSheet.hide(clickedItem)}});var services=angular.module("mopServices",[]);services.factory("mopidy",["$q","$rootScope","$location","settings",function($q,$rootScope,$location,settings){var mopidy=new Mopidy;return $q(function(resolve,reject){mopidy.on("state:online",function(){mopidy.playback.getCurrentTlTrack().done(function(tltrack){mopidy.nowPlaying=tltrack.track,settings.updatePageTitle(tltrack?"playing":"stopped",mopidy.nowPlaying)}),mopidy.on("event:trackPlaybackStarted",function(e){mopidy.nowPlaying=e.tl_track.track,settings.updatePageTitle("playing",mopidy.nowPlaying)}),mopidy.on("event:playbackStateChanged",function(e){settings.updatePageTitle(e.new_state,mopidy.nowPlaying)}),mopidy.play=function(uri){mopidy.tracklist.index(mopidy.nowPlaying).then(function(position){mopidy.tracklist.add(null,position+1,null,[uri]).then(function(tracks){mopidy.playback.play(tracks[0])})})},resolve(mopidy)})})}]),services.factory("lastfm",["$q","$http",function($q,$http){var key="2b640713cdc23381c5fb5fc3ef65b576",lastfm={getAlbum:function(album){return $http.get("https://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key="+key+"&artist="+encodeURIComponent(album.artists[0].name)+"&album="+encodeURIComponent(album.name)+"&format=json")},getArtist:function(artist){return $http.get("https://ws.audioscrobbler.com/2.0/?method=artist.getinfo&api_key="+key+"&artist="+encodeURIComponent(artist.name)+"&format=json")},getTrack:function(track){return $http.get("https://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key="+key+"&artist="+encodeURIComponent(track.artists[0].name)+"&track="+encodeURIComponent(track.name)+"&format=json")}};return lastfm}]),services.factory("settings",["$q","$http","$rootScope",function($q,$http,$rootScope){var settings=null,promise=null,service={get:function(){var deferred=$q.defer();return settings&&deferred.resolve(settings),promise?promise:($http.get("/material-webclient/settings").success(function(settings){for(var itm in settings)if(settings.hasOwnProperty(itm)){var subitm=settings[itm];for(var key in subitm)subitm.hasOwnProperty(key)&&"true"===subitm[key]&&(subitm[key]=!0)}deferred.resolve(settings)}),promise=deferred.promise)},save:function(data){var deferred=$q.defer();for(var itm in data)if(data.hasOwnProperty(itm)){var subitm=data[itm];for(var key in subitm)subitm.hasOwnProperty(key)&&"boolean"==typeof subitm[key]&&(subitm[key]="true")}return $http.post("/material-webclient/settings",data).success(function(response){settings=data,$q.resolve()}),deferred.promise},updatePageTitle:function(state,track){if(track&&"undefined"!=typeof track.artists)var artists=track.artists.map(function(artist){return artist.name}).join(", ");var title=null;"playing"==state?title="▶ "+track.name+" - "+artists+" | Mopidy":"paused"==state&&(title="❙❙ "+track.name+" - "+artists+" | Mopidy"),service.get().then(function(settings){settings["material-webclient"].title?($rootScope.title=title?title:settings["material-webclient"].title,$rootScope.heading=settings["material-webclient"].title):($rootScope.title=$location.host,$rootScope.heading=$location.host)})}};return service}]);
//# sourceMappingURL=app.min.js.map