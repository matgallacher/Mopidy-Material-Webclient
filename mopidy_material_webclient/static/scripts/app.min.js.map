{"version":3,"sources":["../src/app.js","../src/controllers.js","../src/services.js"],"names":["app","angular","module","config","$mdThemingProvider","theme","primaryPalette","accentPalette","$routeProvider","when","templateUrl","controller","otherwise","redirectTo","controllers","$scope","$mdSidenav","$mdDialog","$mdToast","$location","$http","mopidy","lastfm","settings","get","then","title","host","m","playback","getCurrentTrack","done","track","$apply","nowPlaying","getInfo","getState","state","on","console","log","bind","e","new_state","tl_track","errback","play","pause","$on","showNowPlaying","args","artists","length","getTrack","success","trackInfo","t","album","image","images","i","push","goTo","path","toggle","toggleSidenav","menuId","system","$event","DialogController","action","value","hide","closeDialog","cancel","show","targetEvent","template","response","post","simple","content","message","hideDelay","$routeParams","$window","$mdBottomSheet","$sce","type","uri","decodeURIComponent","loading","library","browse","uris","getImages","img","indexOf","lookup","info","tracks","artist","al","name","ar","getAlbum","albumInfo","getArtist","artistInfo","playlists","playlist","favourites","create","newPlaylist","asTrusted","summary","trustAsHtml","getFontIcon","ref","toLowerCase","encodeURIComponent","playAll","tracklist","clear","add","back","history","search","query","showTrackActions","child","$new","isFavourite","some","itm","scope","clickedItem","getCurrentTlTrack","current","index","addToFavourites","removeFromFavourites","save","splice","isPlaylist","refresh","asList","getTlTracks","tltrack","playing","getRandom","enabled","randomOn","getRepeat","repeatOn","$emit","tlid","previous","next","toggleRandom","setRandom","toggleRepeat","setRepeat","remove","setConsume","SaveDialogController","parent","element","document","body","position","albums","albumsLoading","artistsLoading","tracksLoading","any","results","j","k","l","wifi","network","wifi_network","networks","ssid","data","JSON","parse","stringify","Date","now","extensions","forEach","key","checkForUpdates","latest","update","method","url","headers","Content-Type","listItemClick","services","factory","$q","Mopidy","resolve","reject","updatePageTitle","map","join","service","deferred","defer","hasOwnProperty","subitm","promise"],"mappings":"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","file":"app.min.js","sourcesContent":["var app = angular.module('MopidyApp', ['ngRoute', 'ngMaterial', 'mopControllers', 'mopServices']);\n\napp.config(function($mdThemingProvider) {\n    $mdThemingProvider.theme('default')\n        .primaryPalette('deep-purple')\n        .accentPalette('pink');\n});\n\napp.config(['$routeProvider',\n    function ($routeProvider) {\n        $routeProvider.\n            when('/queue', {\n                templateUrl: 'partials/queue.html',\n                controller: 'QueueCtrl'\n            }).\n            when('/library', {\n                templateUrl: 'partials/library.html',\n                controller: 'LibraryCtrl'\n            }).\n            when('/library/:type/:uri', {\n                templateUrl: 'partials/library.html',\n                controller: 'LibraryCtrl'\n            }).\n            when('/playlists', {\n                templateUrl: 'partials/playlists.html',\n                controller: 'PlaylistsCtrl'\n            }).\n            when('/playlists/:uri', {\n                templateUrl: 'partials/playlists.html',\n                controller: 'PlaylistsCtrl'\n            }).\n            when('/search/:uri/:query', {\n                templateUrl: 'partials/search.html',\n                controller: 'SearchCtrl'\n            }).\n            when('/settings', {\n                templateUrl: 'partials/settings.html',\n                controller: 'SettingsCtrl'\n            }).\n            when('/about', {\n                templateUrl: 'partials/about.html',\n                controller: 'AboutCtrl'\n            })\n            .otherwise({\n                redirectTo: '/queue'\n            });\n  }]);","var controllers = angular.module('mopControllers', []);\n\ncontrollers.controller('AppCtrl', [\n    '$scope', '$mdSidenav', '$mdDialog', '$mdToast', '$location', '$http', 'mopidy', 'lastfm', 'settings',\n    function ($scope, $mdSidenav, $mdDialog, $mdToast, $location, $http, mopidy, lastfm, settings) {\n\n        settings.get().then(function(settings) {\n            $scope.settings = settings['material-webclient'];\n\n            if($scope.settings.title) {\n                $scope.title = $scope.settings.title;\n            } else {\n                $scope.title = $location.host();\n            }\n        });\n\n        mopidy.then(function (m) {\n            m.playback.getCurrentTrack()\n                .done(function (track) {\n                    $scope.$apply(function () {\n                        $scope.nowPlaying = track;\n                        $scope.getInfo($scope.nowPlaying);\n                    });\n                });\n\n            m.playback.getState()\n                .done(function (state) {\n                    $scope.$apply(function () {\n                        $scope.state = state;\n                    });\n                });\n\n            m.on(console.log.bind(console));\n\n            m.on('event:playbackStateChanged', function (e) {\n                $scope.$apply(function () {\n                    $scope.state = e.new_state;\n                });\n            });\n\n            m.on('event:trackPlaybackStarted', function (e) {\n                $scope.$apply(function () {\n                    $scope.nowPlaying = e.tl_track.track;\n                    $scope.getInfo($scope.nowPlaying);\n                });\n            });\n\n            m.errback = function (e) {\n                console.log(e);\n            };\n\n            $scope.play = function () {\n                m.playback.play();\n            };\n\n            $scope.pause = function () {\n                m.playback.pause();\n            };\n\n            $scope.$on('$routeChangeSuccess', function () {\n                $scope.showNowPlaying = true;\n            });\n\n            $scope.$on('showNowPlayingChanged', function (e, args) {\n                $scope.showNowPlaying = args;\n            });\n        });\n\n        $scope.getInfo = function (track) {\n            if (!track || track.artists.length === 0) {\n                return;\n            }\n            lastfm.getTrack(track).success(function (trackInfo) {\n                var t = trackInfo.track;\n                if (!t) {\n                    return;\n                }\n\n                if (t.album &&\n                    t.album.image &&\n                    t.album.image.length > 0) {\n                    $scope.nowPlaying.album = t.album;\n                    $scope.nowPlaying.album.images = [];\n                    for (var i = 0; i < t.album.image.length; i++) {\n                        $scope.nowPlaying.album.images.push(t.album.image[i]['#text']);\n                    }\n                }\n            });\n        };\n\n        $scope.showNowPlaying = true;\n\n        $scope.goTo = function (path) {\n            $location.path(path);\n            $mdSidenav('left').toggle();\n        };\n\n        $scope.toggleSidenav = function (menuId) {\n            $mdSidenav(menuId).toggle();\n        };\n\n        $scope.system = function ($event) {\n\n            function DialogController($scope, $mdDialog) {\n                $scope.action = function (value) {\n                    $mdDialog.hide(value);\n                };\n                $scope.closeDialog = function () {\n                    $mdDialog.cancel();\n                };\n            }\n\n            $mdDialog.show({\n                targetEvent: $event,\n                template:\n                    '<md-dialog aria-label=\"List dialog\">' +\n                        '  <md-dialog-content>' +\n                        '    <md-list>' +\n                        '      <md-list-item ng-click=\"action(\\'restart\\')\">' +\n                        '        <md-icon class=\"md-accent\">refresh</md-icon><p>Restart</p>' +\n                        '      </md-list-item>' +\n                        '      <md-list-item ng-click=\"action(\\'about\\')\">' +\n                        '        <md-icon class=\"md-accent\">info</md-icon><p>About</p>' +\n                        '      </md-list-item>' +\n                        '      <md-list-item ng-click=\"closeDialog()\">' +\n                        '        <md-icon>cancel</md-icon><p>Cancel</p>' +\n                        '      </md-list-item>' +\n                        '    </md-list>' +\n                        '  </md-dialog-content>' +\n                        '</md-dialog>',\n                controller: DialogController\n            }).then(function (response) {\n                if (response == 'about') {\n                    $location.path('about');\n                } else if (response == 'restart') {\n                    $http.post('/material-webclient/restart').success(function (response) {\n                        $mdToast.show(\n                            $mdToast.simple()\n                            .content(response.message)\n                            .hideDelay(3000)\n                        );\n                    });\n                }\n                console.log(response);\n            });\n        };\n    }\n]);\n\ncontrollers.controller('LibraryCtrl', [\n    '$scope', '$routeParams', '$location', '$window', '$mdBottomSheet', '$sce', 'mopidy', 'lastfm',\n    function ($scope, $routeParams, $location, $window, $mdBottomSheet, $sce, mopidy, lastfm) {\n        var type = null;\n        var uri = null;\n\n        if ($routeParams.type) {\n            type = decodeURIComponent($routeParams.type);\n        }\n        if ($routeParams.uri) {\n            uri = decodeURIComponent($routeParams.uri);\n            $scope.uri = uri;\n        }\n\n        $scope.loading = true;\n\n        mopidy.then(function (m) {\n            $scope.mopidy = m;\n            m.library.browse(uri).done(\n                function (content) {\n                    var uris = [];\n\n                    $scope.$apply(function () {\n                        $scope.content = content;\n                        $scope.loading = false;\n                    });\n\n                    for (var i = 0; i < content.length; i++) {\n                        if (content[i].type == 'track') {\n                            uris.push(content[i].uri);\n                        }\n                    }\n\n                    if (type) {\n                        m.library.getImages(uris).done(function (images) {\n                            $scope.$apply(function () {\n                                for (var i = 0; i < $scope.content.length; i++) {\n                                    var img = images[$scope.content[i].uri];\n                                    if (img && img.length > 0) {\n                                        $scope.content[i].image = img[0].uri;\n                                    }\n                                }\n                            });\n                        });\n                    }\n                });\n\n            if (type &&\n                type != 'directory' &&\n                uri.indexOf('podcast') !== 0) {\n                m.library.lookup(uri).done(function (info) {\n                    $scope.tracks = info;\n                    var album;\n                    var artist;\n                    if (info.length > 0) {\n                        album = info[0].album;\n                        artist = info[0].artists && info[0].artists.length > 0 ? info[0].artists[0] : null;\n                    }\n\n                    for (var i = 1; i < info.length; i++) {\n                        var al = info[i].album;\n                        if (album && al && al.name != album.name) {\n                            album = null;\n                        }\n                        var ar = info[i].artists && info[i].artists.length > 0 ? info[i].artists[0] : null;\n                        if (artist && ar && ar.name != artist.name) {\n                            artist = null;\n                        }\n                    }\n\n                    if (type == 'album' && album) {\n                        lastfm.getAlbum(album).success(function (albumInfo) {\n                            $scope.albumInfo = albumInfo.album;\n                        });\n                    }\n\n                    if (type == 'artist' && artist) {\n                        lastfm.getArtist(artist).success(function (artistInfo) {\n                            $scope.artistInfo = artistInfo.artist;\n                        });\n                    }\n                });\n            }\n\n            m.playlists.lookup('m3u:Favourites.m3u').done(function (playlist) {\n                if (!playlist) {\n                    m.playlists.create('Favourites', 'm3u').done(function (newPlaylist) {\n                        $scope.favourites = newPlaylist;\n                    });\n                } else {\n                    $scope.favourites = playlist;\n                }\n            });\n        });\n\n        $scope.asTrusted = function (summary) {\n            return $sce.trustAsHtml(summary);\n        };\n\n        $scope.getFontIcon = function (ref) {\n            if (ref.type.toLowerCase() == 'track') {\n                return 'fa-music';\n            } else {\n                if (ref.uri.indexOf('spotify') === 0) {\n                    return 'fa-spotify';\n                } else if (ref.uri.indexOf('tunein:') === 0) {\n                    return 'fa-headphones';\n                } else if (ref.uri.indexOf('podcast:') === 0) {\n                    return 'fa-rss';\n                } else if (ref.uri.indexOf('soundcloud:') === 0) {\n                    return 'fa-soundcloud';\n                } else {\n                    return 'fa-folder-o';\n                }\n            }\n        };\n\n        $scope.goTo = function (ref) {\n            if (ref.type != 'track') {\n                $location.path('library/' + ref.type + '/' + encodeURIComponent(ref.uri));\n            } else {\n                $scope.mopidy.play(ref.uri);\n            }\n        };\n\n        $scope.playAll = function () {\n            $scope.mopidy.tracklist.clear();\n            var uris = [];\n            for (var i = 0; i < $scope.tracks.length; i++) {\n                uris.push($scope.tracks[i].uri);\n            }\n            $scope.mopidy.tracklist.add(null, null, null, uris).then(function () {\n                $scope.mopidy.playback.play();\n            });\n        };\n\n        $scope.back = function () {\n            $window.history.back();\n        };\n\n        $scope.search = function (uri, query) {\n            $location.path('search/' + encodeURIComponent(uri) + '/' + encodeURIComponent(query));\n        };\n\n        $scope.showTrackActions = function ($event, track) {\n\n            var child = $scope.$new();\n\n            if ($scope.favourites.tracks) {\n                child.isFavourite = $scope.favourites.tracks.some(function (itm) {\n                    return itm.uri == track.uri;\n                });\n            }\n\n            $mdBottomSheet.show({\n                templateUrl: 'partials/track-actions.html',\n                controller: 'TrackActionsCtrl',\n                targetEvent: $event,\n                scope: child\n            }).then(function (clickedItem) {\n                if (clickedItem == 'play-next') {\n                    $scope.mopidy.playback.getCurrentTlTrack().done(function (current) {\n                        console.log(current);\n                        $scope.mopidy.tracklist.index(current).done(function (index) {\n                            $scope.mopidy.tracklist.add(null, index + 1, null, [track.uri]);\n                        });\n                    });\n                } else if (clickedItem == 'add-to-queue') {\n                    $scope.mopidy.tracklist.add(null, null, null, [track.uri]);\n                } else if (clickedItem == 'add-to-favourites') {\n                    $scope.addToFavourites(track.uri);\n                } else if (clickedItem == 'remove-from-favourites') {\n                    $scope.removeFromFavourites(track.uri);\n                }\n            });\n        };\n\n        $scope.addToFavourites = function (uri) {\n            $scope.mopidy.library.lookup(uri).done(function (tracks) {\n                if (!$scope.favourites.tracks) {\n                    $scope.favourites.tracks = tracks;\n                } else {\n                    $scope.favourites.tracks.push(tracks[0]);\n                }\n                $scope.mopidy.playlists.save($scope.favourites).done(function (playlist) {\n                    $scope.favourites = playlist;\n                });\n            });\n        };\n\n        $scope.removeFromFavourites = function (uri) {\n            for (var i = 0; i < $scope.favourites.tracks.length; i++) {\n                if ($scope.favourites.tracks[i].uri == uri) {\n                    $scope.favourites.tracks.splice(i, 1);\n                }\n            }\n            $scope.mopidy.playlists.save($scope.favourites).done(function (playlist) {\n                $scope.favourites = playlist;\n            });\n        };\n    }\n]);\n\ncontrollers.controller('PlaylistsCtrl', [\n    '$scope', '$routeParams', '$location', 'mopidy',\n    function ($scope, $routeParams, $location, mopidy) {\n        var uri = $routeParams.uri;\n\n        mopidy.then(function (m) {\n            $scope.mopidy = m;\n            if (uri) {\n                $scope.isPlaylist = true;\n                m.playlists.lookup(uri).done(\n                    function (playlist) {\n                        $scope.$apply(function () {\n                            $scope.playlist = playlist;\n                            $scope.content = playlist.tracks;\n\n                            var uris = [];\n                            for (var i = 0; i < $scope.content.length && i < 9; i++) {\n                                uris.push($scope.content[i].uri);\n                            }\n\n                            m.library.getImages(uris).done(function (images) {\n                                $scope.$apply(function () {\n                                    $scope.images = [];\n                                    for (var i = 0; i < uris.length; i++) {\n                                        if (images[uris[i]] && images[uris[i]].length > 0) {\n                                            $scope.images.push(images[uris[i]][0].uri);\n                                        }\n                                    }\n                                });\n                            });\n                        });\n                    });\n            } else {\n                m.playlists.refresh().done(function () {\n                    m.playlists.asList().done(\n                        function (content) {\n                            $scope.$apply(function () {\n                                $scope.content = content;\n                            });\n                        });\n                });\n            }\n        });\n\n        $scope.getFontIcon = function (ref) {\n            if (ref.uri.indexOf('spotify') === 0) {\n                return 'fa-spotify';\n            } else if (ref.uri.indexOf('tunein:') === 0) {\n                return 'fa-headphones';\n            } else if (ref.uri.indexOf('podcast') === 0) {\n                return 'fa-rss';\n            } else if (ref.uri.indexOf('soundcloud') === 0) {\n                return 'fa-soundcloud';\n            } else if ($scope.isPlaylist) {\n                return 'fa-music';\n            } else {\n                return 'fa-folder-o';\n            }\n        };\n\n        $scope.goTo = function (ref) {\n            if ($scope.isPlaylist) {\n                $scope.mopidy.tracklist.clear();\n                $scope.mopidy.tracklist.add(null, null, null, [ref.uri])\n                    .then(function () {\n                        $scope.mopidy.playback.play();\n                    });\n            } else {\n                $location.path('playlists/' + ref.uri);\n            }\n        };\n\n        $scope.playAll = function () {\n            $scope.mopidy.tracklist.clear().done(function () {\n                var uris = [];\n                for (var i = 0; i < $scope.content.length; i++) {\n                    uris.push($scope.content[i].uri);\n                }\n                $scope.mopidy.tracklist.add(null, null, null, uris).done(function () {\n                    $scope.mopidy.playback.play();\n                });\n            });\n        };\n    }\n]);\n\ncontrollers.controller('QueueCtrl', [\n    '$scope', '$mdDialog', '$mdToast', 'mopidy', 'lastfm',\n    function ($scope, $mdDialog, $mdToast, mopidy, lastfm) {\n        mopidy.then(function (m) {\n\n            $scope.mopidy = m;\n            m.tracklist.getTlTracks().then(function (tracks) {\n                $scope.$apply(function () {\n                    $scope.tracks = tracks;\n                });\n\n                m.playback.getCurrentTlTrack()\n                    .done(function (tltrack) {\n                        $scope.$apply(function () {\n                            $scope.playing = tltrack;\n                            $scope.loading = false;\n                            if (tltrack) {\n                                $scope.getInfo(tltrack.track);\n                            }\n                        });\n                    });\n            });\n\n            m.tracklist.getRandom().done(function (enabled) {\n                $scope.$apply(function () {\n                    $scope.randomOn = enabled;\n                });\n            });\n\n            m.tracklist.getRepeat().done(function (enabled) {\n                $scope.$apply(function () {\n                    $scope.repeatOn = enabled;\n                });\n            });\n\n            m.on('event:tracklistChanged', function () {\n                m.tracklist.getTlTracks().then(function (tracks) {\n                    $scope.$apply(function () {\n                        $scope.tracks = tracks;\n                    });\n                });\n            });\n\n            m.playback.getState()\n                .done(function (state) {\n                    $scope.$apply(function () {\n                        $scope.state = state;\n                    });\n                });\n\n            m.on('event:playbackStateChanged', function (e) {\n                $scope.$apply(function () {\n                    $scope.state = e.new_state;\n                });\n            });\n\n            m.on('event:trackPlaybackStarted', function (e) {\n                $scope.$apply(function () {\n                    $scope.playing = e.tl_track;\n                    $scope.getInfo($scope.nowPlaying);\n                });\n            });\n\n            $scope.$emit('showNowPlayingChanged', false);\n        });\n\n        $scope.getInfo = function (track) {\n            if (!track || track.artists.length === 0) {\n                return;\n            }\n            lastfm.getTrack(track).success(function (trackInfo) {\n                var t = trackInfo.track;\n                if (!t) {\n                    return;\n                }\n\n                if (t.album &&\n                    t.album.image &&\n                    t.album.image.length > 0) {\n                    $scope.playing.track.album = t.album;\n                    $scope.playing.track.album.images = [];\n                    for (var i = 0; i < t.album.image.length; i++) {\n                        $scope.playing.track.album.images.push(t.album.image[i]['#text']);\n                    }\n                }\n            });\n        };\n\n        $scope.play = function (track) {\n            if ($scope.state == 'playing' && track.tlid == $scope.playing.tlid) {\n                $scope.mopidy.playback.pause();\n            } else {\n                $scope.mopidy.playback.play(track);\n            }\n        };\n\n        $scope.previous = function () {\n            $scope.mopidy.playback.previous();\n        };\n\n        $scope.next = function () {\n            $scope.mopidy.playback.next();\n        };\n\n        $scope.toggleRandom = function () {\n            $scope.mopidy.tracklist.setRandom(!$scope.randomOn).done(\n                function () {\n                    $scope.$apply(function () {\n                        $scope.randomOn = !$scope.randomOn;\n                    });\n                });\n        };\n\n        $scope.toggleRepeat = function () {\n            $scope.mopidy.tracklist.setRepeat(!$scope.repeatOn).done(\n                function () {\n                    $scope.$apply(function () {\n                        $scope.repeatOn = !$scope.repeatOn;\n                    });\n                });\n        };\n\n        $scope.remove = function (track) {\n            $scope.mopidy.tracklist.remove({ tlid: [track.tlid] });\n        };\n\n        $scope.clear = function () {\n            $scope.mopidy.tracklist.clear();\n        };\n\n        $scope.setConsume = function () {\n            $scope.mopidy.tracklist.setConsume(true).then();\n        };\n\n        $scope.save = function ($event) {\n            $mdDialog.show({\n                targetEvent: $event,\n                parent: angular.element(document.body),\n                template:\n                    '<md-dialog aria-label=\"Save playlist\" flex=\"20\">' +\n                        '  <md-dialog-content>' +\n                        '    <h3 class=\"md-title\">New playlist</h3>' +\n                        '    <form>' +\n                        '      <md-input-container flex>' +\n                        '        <label>Name</label>' +\n                        '        <input type=\"text\" required ng-model=\"name\"/>' +\n                        '      </md-input-container>' +\n                        '    </form>' +\n                        '  </md-dialog-content>' +\n                        '  <div class=\"md-actions\">' +\n                        '    <md-button ng-click=\"cancel()\" class=\"md-primary\">' +\n                        '      Cancel' +\n                        '    </md-button>' +\n                        '    <md-button ng-click=\"save()\" class=\"md-primary\">' +\n                        '      Create playlist' +\n                        '    </md-button>' +\n                        '  </div>' +\n                        '</md-dialog>',\n                controller: SaveDialogController\n            }).then(function (name) {\n                if (!name) {\n                    return;\n                }\n\n                $scope.mopidy.playlists.create(name, 'm3u').done(function (newPlaylist) {\n                    newPlaylist.tracks = [];\n                    for (var i = 0; i < $scope.tracks.length; i++) {\n                        newPlaylist.tracks.push($scope.tracks[i].track);\n                    }\n                    $scope.mopidy.playlists.save(newPlaylist).done(function (playlist) {\n                        $mdToast.show(\n                            $mdToast.simple()\n                            .content('New playlist ' + playlist.name + ' created')\n                            .position('bottom')\n                            .hideDelay(1500)\n                        );\n                    });\n                });\n            });\n\n            function SaveDialogController($scope, $mdDialog) {\n                $scope.cancel = function () {\n                    $mdDialog.cancel();\n                };\n                $scope.save = function () {\n                    $mdDialog.hide($scope.name);\n                };\n            }\n        };\n    }\n]);\n\ncontrollers.controller('SearchCtrl', [\n    '$scope', '$routeParams', '$mdBottomSheet', '$location', 'mopidy',\n    function ($scope, $routeParams, $mdBottomSheet, $location, mopidy) {\n\n        $scope.albums = [];\n        $scope.albumsLoading = true;\n        $scope.artists = [];\n        $scope.artistsLoading = true;\n        $scope.tracks = [];\n        $scope.tracksLoading = true;\n\n        var uri = decodeURIComponent($routeParams.uri);\n        var query = decodeURIComponent($routeParams.query);\n\n        mopidy.then(function (m) {\n            $scope.mopidy = m;\n            m.library.search({ 'any': query }, [uri]).then(function (results) {\n                $scope.$apply(function () {\n                    for (var i = 0; i < results.length; i++) {\n                        var library = results[i];\n\n                        $scope.albumsLoading = false;\n                        if (library.albums) {\n                            for (var j = 0; j < library.albums.length; j++) {\n                                $scope.albums.push(library.albums[j]);\n                            }\n                        }\n\n                        $scope.artistsLoading = false;\n                        if (library.artists) {\n                            for (var k = 0; k < library.artists.length; k++) {\n                                $scope.artists.push(library.artists[k]);\n                            }\n                        }\n\n                        $scope.tracksLoading = false;\n                        if (library.tracks) {\n                            for (var l = 0; l < library.tracks.length; l++) {\n                                $scope.tracks.push(library.tracks[l]);\n                            }\n                        }\n                    }\n                });\n\n                console.log(results);\n            });\n\n            m.playlists.lookup('m3u:Favourites.m3u').done(function (playlist) {\n                if (!playlist) {\n                    m.playlists.create('Favourites', 'm3u').done(function (newPlaylist) {\n                        $scope.favourites = newPlaylist;\n                    });\n                } else {\n                    $scope.favourites = playlist;\n                }\n            });\n        });\n\n        $scope.goto = function (type, uri) {\n            $location.path('library/' + type + '/' + encodeURIComponent(uri));\n        };\n\n        $scope.play = function (track) {\n            $scope.mopidy.play(track.uri);\n        };\n\n        $scope.showTrackActions = function ($event, track) {\n\n            var child = $scope.$new();\n\n            if ($scope.favourites.tracks) {\n                child.isFavourite = $scope.favourites.tracks.some(function (itm) {\n                    return itm.uri == track.uri;\n                });\n            }\n\n            $mdBottomSheet.show({\n                templateUrl: 'partials/track-actions.html',\n                controller: 'TrackActionsCtrl',\n                targetEvent: $event,\n                scope: child\n            }).then(function (clickedItem) {\n                if (clickedItem == 'play-next') {\n                    $scope.mopidy.playback.getCurrentTlTrack().done(function (current) {\n                        console.log(current);\n                        $scope.mopidy.tracklist.index(current).done(function (index) {\n                            $scope.mopidy.tracklist.add(null, index + 1, null, [track.uri]);\n                        });\n                    });\n                } else if (clickedItem == 'add-to-queue') {\n                    $scope.mopidy.tracklist.add(null, null, null, [track.uri]);\n                } else if (clickedItem == 'add-to-favourites') {\n                    $scope.addToFavourites(track.uri);\n                } else if (clickedItem == 'remove-from-favourites') {\n                    $scope.removeFromFavourites(track.uri);\n                }\n            });\n        };\n\n        $scope.addToFavourites = function (uri) {\n            $scope.mopidy.library.lookup(uri).done(function (tracks) {\n                if (!$scope.favourites.tracks) {\n                    $scope.favourites.tracks = tracks;\n                } else {\n                    $scope.favourites.tracks.push(tracks[0]);\n                }\n                $scope.mopidy.playlists.save($scope.favourites).done(function (playlist) {\n                    $scope.favourites = playlist;\n                });\n            });\n        };\n\n        $scope.removeFromFavourites = function (uri) {\n            for (var i = 0; i < $scope.favourites.tracks.length; i++) {\n                if ($scope.favourites.tracks[i].uri == uri) {\n                    $scope.favourites.tracks.splice(i, 1);\n                }\n            }\n            $scope.mopidy.playlists.save($scope.favourites).done(function (playlist) {\n                $scope.favourites = playlist;\n            });\n        };\n    }\n]);\n\ncontrollers.controller('SettingsCtrl', [\n    '$scope', '$http', '$mdToast', 'settings',\n    function ($scope, $http, $mdToast, settings) {\n        settings.get().then(function (settings) {\n            $scope.wifi = $scope.wifi ? $scope.wifi : [];\n            $scope.settings = settings;\n            if ($scope.wifi.indexOf(settings.network.wifi_network) < 0) {\n                $scope.wifi.push(settings.network.wifi_network);\n            }\n        });\n\n        $http.get('/material-webclient/wifi').success(function (networks) {\n            $scope.wifi = $scope.wifi ? $scope.wifi : [];\n            for (var i = 0; i < networks.length; i++) {\n                if ($scope.wifi.indexOf(networks[i].ssid) < 0) {\n                    $scope.wifi.push(networks[i].ssid);\n                }\n            }\n        });\n\n        $scope.save = function () {\n            var data = JSON.parse(JSON.stringify($scope.settings));\n            settings.save(data).then(function() {\n                $mdToast.show(\n                    $mdToast.simple()\n                        .content(response.message)\n                        .hideDelay(3000)\n                );\n            });\n        };\n    }\n]);\n\ncontrollers.controller('AboutCtrl', [\n    '$scope', '$http', '$mdToast',\n    function ($scope, $http, $mdToast) {\n        $scope.loading = true;\n\n        $scope.refresh = function () {\n            $http.get('/material-webclient/extensions?' + Date.now()).success(function (response) {\n                $scope.loading = false;\n                var extensions = {};\n                angular.forEach(response, function (value, key) {\n                    if (key.indexOf('Mopidy') >= 0) {\n                        extensions[key] = { current: value };\n                    }\n                });\n                $scope.extensions = extensions;\n            });\n        };\n\n        $scope.refresh();\n\n        $scope.checkForUpdates = function () {\n            $scope.loading = true;\n            $http.get('/material-webclient/extensions?outdated=true&' + Date.now()).success(function (response) {\n                var message = 'No updates found';\n                for (var itm in response) {\n                    if ($scope.extensions[itm]) {\n                        $scope.extensions[itm].latest = response[itm].latest;\n                        message = 'Updates found for installed modules';\n                    }\n                }\n                $scope.loading = false;\n                $mdToast.show(\n                    $mdToast.simple()\n                        .content(message)\n                        .hideDelay(3000)\n                );\n            });\n        };\n\n        $scope.update = function (name) {\n            $http({\n                method: 'POST',\n                url: '/material-webclient/extensions',\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                data: 'extension=' + name\n            }).success(function (response) {\n                $mdToast.show(\n                    $mdToast.simple()\n                        .content(response.message)\n                        .hideDelay(3000)\n                );\n            });\n        };\n    }]);\n\ncontrollers.controller('TrackActionsCtrl', function ($scope, $mdBottomSheet) {\n    $scope.listItemClick = function (clickedItem) {\n        $mdBottomSheet.hide(clickedItem);\n    };\n});\n","var services = angular.module('mopServices', []);\n\nservices.factory('mopidy', ['$q',\n    function ($q) {\n        var mopidy = new Mopidy();\n        return $q(function (resolve, reject) {\n            mopidy.on(\"state:online\", function () {\n                resolve(mopidy);\n\n                mopidy.playback.getCurrentTlTrack()\n                    .done(function (tltrack) {\n                        mopidy.nowPlaying = tltrack;\n                        // TODO: Unsure how to get the current value from a promise, must inventigate\n                        updatePageTitle('playing', mopidy.nowPlaying);\n                    });\n\n                mopidy.on('event:trackPlaybackStarted', function (e) {\n                    mopidy.nowPlaying = e.tl_track.track;\n                    updatePageTitle('playing', mopidy.nowPlaying);\n                });\n\n                mopidy.on('event:playbackStateChanged', function (e) {\n                    updatePageTitle(e.new_state, mopidy.nowPlaying);\n                });\n\n                updatePageTitle = function(state, track) {\n                    if (typeof track.artists != 'undefined') {\n                        var artists = track.artists.map(\n                            function(artist){\n                                return artist.name;\n                            }).join(\", \");\n                    }\n\n                    var title = '';\n                    if (state == 'playing') {\n                        title = '\\u25B6 ' + track.name + ' - ' + artists + ' | Mopidy';\n                    } else if (state == 'paused') {\n                        title = '\\u2759\\u2759 ' + track.name + ' - ' + artists + ' | Mopidy';\n                    } else {\n                        title = 'Mopidy';\n                    }\n\n                    document.title = title;\n                };\n\n                mopidy.play = function (uri) {\n                    mopidy.tracklist.index(mopidy.nowPlaying).then(function (position) {\n                        mopidy.tracklist.add(null, position + 1, null, [uri]).then(function (tracks) {\n                            mopidy.playback.play(tracks[0]);\n                        });\n                    });\n                };\n            });\n        });\n    }\n]);\n\nservices.factory('lastfm', [\n    '$q', '$http',\n    function ($q, $http) {\n        var key = '2b640713cdc23381c5fb5fc3ef65b576';\n        var lastfm = {\n            getAlbum: function (album) {\n                return $http.get(\"http://ws.audioscrobbler.com/2.0/?method=album.getinfo&api_key=\" + key +\n                    \"&artist=\" + encodeURIComponent(album.artists[0].name) +\n                    \"&album=\" + encodeURIComponent(album.name) +\n                    \"&format=json\");\n            },\n            getArtist: function (artist) {\n                return $http.get(\"http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&api_key=\" + key +\n                    \"&artist=\" + encodeURIComponent(artist.name) +\n                    \"&format=json\");\n            },\n            getTrack: function (track) {\n                return $http.get(\"http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=\" + key +\n                    \"&artist=\" + encodeURIComponent(track.artists[0].name) +\n                    \"&track=\" + encodeURIComponent(track.name) +\n                    \"&format=json\");\n            }\n        };\n\n        return lastfm;\n    }\n]);\n\nservices.factory('settings', [\n    '$q', '$http',\n    function($q, $http) {\n        var settings = null;\n\n        var service = {\n            get: function() {\n                var deferred = $q.defer();\n\n                if(settings) {\n                    deferred.resolve(settings);\n                }\n\n                $http.get('/material-webclient/settings').success(function (settings) {\n                    for (var itm in settings) {\n                        if (settings.hasOwnProperty(itm)) {\n                            var subitm = settings[itm];\n                            for (var key in subitm) {\n                                if (subitm.hasOwnProperty(key)) {\n                                    if (subitm[key] === 'true') {\n                                        subitm[key] = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    deferred.resolve(settings);\n                });\n\n                return deferred.promise;\n            },\n\n            save: function(data) {\n                var deferred = $q.defer();\n\n                for (var itm in data) {\n                    if (data.hasOwnProperty(itm)) {\n                        var subitm = data[itm];\n                        for (var key in subitm) {\n                            if (subitm.hasOwnProperty(key)) {\n                                if (typeof subitm[key] === 'boolean') {\n                                    subitm[key] = 'true';\n                                }\n                            }\n                        }\n                    }\n                }\n\n                $http.post('/material-webclient/settings', data)\n                    .success(function (response) {\n                        settings = data;\n\n                        $q.resolve();\n                    });\n\n                return deferred.promise;\n            }\n        }\n\n        return service;\n    }\n]);\n"]}